# -*- coding: utf-8 -*-
"""nse_utils.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/14zbrKRzSWK1y4OCKy-JD-BNLrBVe_8QW
"""

# nse_utils.py

import numpy as np

def calculate_nse(observed, simulated):
    """
    Calculate Nash-Sutcliffe Efficiency (NSE) between observed and simulated data.

    Parameters:
    - observed: Array or Series containing observed data.
    - simulated: Array or Series containing simulated data.

    Returns:
    - nse: Nash-Sutcliffe Efficiency value.
    """
    mse = np.mean((observed - simulated) ** 2)
    var_observed = np.var(observed)
    nse = 1 - (mse / var_observed)
    return nse

def calculate_nse_for_station(df_observed, df_simulated):
    """
    Calculate NSE for a station using observed and simulated discharge data.

    Parameters:
    - df_observed: DataFrame containing observed discharge data.
    - df_simulated: DataFrame containing simulated discharge data.

    Returns:
    - nse: Nash-Sutcliffe Efficiency value.
    """
    observed = df_observed['USGS_Discharge']
    simulated = df_simulated['Sim_Discharge']
    nse = calculate_nse(observed, simulated)
    return nse